/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.stok.barang;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kury
 */
public class FormBarang extends javax.swing.JFrame {
 private DefaultTableModel tabelmodel;
 
    /**
     * Creates new form TampilanAplikasi
     */
    public FormBarang() {
        initComponents();
        
         tabelmodel = new DefaultTableModel();
        tableBarang.setModel(tabelmodel);
        tabelmodel.addColumn("KODE BARANG");
        tabelmodel.addColumn("NAMA BARANG");
        tabelmodel.addColumn("KATEGORI");
         tabelmodel.addColumn("HARGA");
         tabelmodel.addColumn("STOK");
        
        loadTabelBarang();
    }
    
     private void loadTabelBarang(){
        
        tabelmodel.getDataVector().removeAllElements();
        tabelmodel.fireTableDataChanged();
    Connection connection = DataBarang.getConnection();
    String sql ="select*from barang order by nama_barang";
    try{
        PreparedStatement statement= (PreparedStatement) connection.prepareStatement(sql);
        ResultSet result = statement.executeQuery();
        while(result.next()){
        Object[] o = new Object[5];
        o[0]=result.getLong("kode_barang");
        o[1]=result.getString("nama_barang");
        o[2]=result.getString("kategori");
        o[3]=result.getLong("harga");
         o[4]=result.getLong("stok");
        
         tabelmodel.addRow(o);
        }
        }catch(SQLException e){
            System.out.println(e);
        }
    }
     
      private void loadTabelFilter(){
         String textfilter= textfilterkategori.getText();
        tabelmodel.getDataVector().removeAllElements();
        tabelmodel.fireTableDataChanged();
    Connection connection = DataBarang.getConnection();
    String sql ="select*from barang where kategori=?";
    try{
        PreparedStatement statement= (PreparedStatement) connection.prepareStatement(sql);
           statement.setString(1,textfilter);
        ResultSet result = statement.executeQuery();
        while(result.next()){
        Object[] o = new Object[5];
        o[0]=result.getLong("kode_barang");
        o[1]=result.getString("nama_barang");
        o[2]=result.getString("kategori");
        o[3]=result.getLong("harga");
         o[4]=result.getLong("stok");
        
         tabelmodel.addRow(o);
        }
        }catch(SQLException e){
            System.out.println(e);
        }
    }
      
       private void loadTabelSearch(){
         String textsearchh= textsearch.getText();
          Long textsearchhInt;
           textsearchhInt = Long.parseLong(textsearchh);
        tabelmodel.getDataVector().removeAllElements();
        tabelmodel.fireTableDataChanged();
    Connection connection = DataBarang.getConnection();
    String sql ="select*from barang where kode_barang=?";
    try{
        PreparedStatement statement= (PreparedStatement) connection.prepareStatement(sql);
           statement.setLong(1,textsearchhInt);
        ResultSet result = statement.executeQuery();
        while(result.next()){
        Object[] o = new Object[5];
        o[0]=result.getLong("kode_barang");
        o[1]=result.getString("nama_barang");
        o[2]=result.getString("kategori");
        o[3]=result.getLong("harga");
         o[4]=result.getLong("stok");
        
         tabelmodel.addRow(o);
        }
        }catch(SQLException e){
            System.out.println(e);
        }
    }
     
    
     
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        text_kodebrng = new javax.swing.JTextField();
        text_namabrang = new javax.swing.JTextField();
        textKategori = new javax.swing.JTextField();
        textHarga = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btn_ubah = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBarang = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        textsearch = new javax.swing.JTextField();
        caribtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        textfilterkategori = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        textstok = new javax.swing.JTextField();
        alldata = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Identitas");

        jLabel2.setText("Kode Barang");

        jLabel3.setText("Nama Barang");

        jLabel4.setText("Kategori");

        jLabel5.setText("Harga");

        jButton1.setText("Tambah");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        jButton3.setText("Hapus");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBarang);

        jLabel6.setText("Kode Barang");

        caribtn.setText("Cari");
        caribtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caribtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Kategori");

        textfilterkategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfilterkategoriActionPerformed(evt);
            }
        });

        btnFilter.setText("Filter");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Kury\\Desktop\\ic_flight_takeoff_black_24dp\\ic_flight_takeoff_black_24dp\\web\\ic_flight_takeoff_black_24dp_2x.png")); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Reno Mart");

        jLabel10.setText("Stok");

        alldata.setText("Tampilkan Semua Data");
        alldata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alldataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel10))
                                    .addGap(119, 119, 119)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(text_kodebrng)
                                        .addComponent(text_namabrang)
                                        .addComponent(textKategori)
                                        .addComponent(textHarga)
                                        .addComponent(textstok, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addGap(37, 37, 37)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel9)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(31, 31, 31)
                                            .addComponent(jButton3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                            .addComponent(btn_reset)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(alldata, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textfilterkategori, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(textsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnFilter)
                                    .addComponent(caribtn))
                                .addGap(69, 69, 69))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel9)))
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text_kodebrng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(text_namabrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(textstok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btn_ubah)
                    .addComponent(jButton3)
                    .addComponent(btn_reset))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(alldata, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(caribtn)
                    .addComponent(textsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btnFilter)
                    .addComponent(textfilterkategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            String kode_barang = text_kodebrng.getText();
       String nama_barang = text_namabrang.getText();
       String kategori= textKategori.getText();
       String harga= textHarga.getText();
       String stok= textstok.getText();
       
       if(kode_barang.equals("")){
       JOptionPane.showMessageDialog(this, "Kolom Kode tidak boleh dikosongkan");
       }else if(nama_barang.equals("")){
       JOptionPane.showMessageDialog(this, "Kolom Nama tidak boleh dikosongkan");
       }else if(kategori.equals("")){
       JOptionPane.showMessageDialog(this, "Kolom Kategori tidak boleh dikosongkan");
       }else if(harga.equals("")){
       JOptionPane.showMessageDialog(this, "Kolom Harga tidak boleh dikosongkan");
       }else{
           Long kode_barangInt;
           Long hargaInt;
           Long stokInt;
           try{
               kode_barangInt = Long.parseLong(kode_barang);
               hargaInt = Long.parseLong(harga);
               stokInt = Long.parseLong(stok);
           }catch(Exception e){
           JOptionPane.showMessageDialog(this, "Masukkan dengan angka");
           return;
           }
              try{
           Connection connection = DataBarang.getConnection();
           String query = "insert into barang (kode_barang,nama_barang,kategori,harga,stok) values (?,?,?,?,?)";
           PreparedStatement statement = (PreparedStatement) connection.prepareStatement(query);
           statement.setLong(1,kode_barangInt);
           statement.setString(2,nama_barang);
           statement.setString(3,kategori);
            statement.setLong(4,hargaInt);
            statement.setLong(5,stokInt);
           statement.executeUpdate();
           JOptionPane.showMessageDialog(this, "Data Berhasil di Simpan");
           loadTabelBarang();
            btn_resetActionPerformed(evt);
       }catch(Exception e){
           JOptionPane.showMessageDialog(this,"Data gagal disimpan");
           System.out.println(e);
       }
           
           
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String kode_barang = text_kodebrng.getText();
            
            if(kode_barang.equals("")){
               JOptionPane.showMessageDialog(this, "pilih data yang akan dihapus");
                
            }else{
                Long kode_barangInt=null;
                try{
                    kode_barangInt=Long.parseLong(kode_barang);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Harap isi Kode barang dengan Integer");
                }
                
            try{
                    Connection connection = DataBarang.getConnection();
                    String query = "delete from barang where kode_barang=?";
                    PreparedStatement statement = (PreparedStatement) connection.prepareStatement(query);
                    statement.setLong(1,kode_barangInt);
                    statement.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Berhasil dihapus");
                    loadTabelBarang();
                    btn_resetActionPerformed(evt);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Data gagal dihapus");
                    System.out.println(e);
                }
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBarangMouseClicked
        int i = tableBarang.getSelectedRow();
        if(i==-1){
        JOptionPane.showMessageDialog(this, "Pilih data");
        }else{
        text_kodebrng.setText( tabelmodel.getValueAt(i, 0)+"");
        text_namabrang.setText((String) tabelmodel.getValueAt(i, 1));
        textKategori.setText((String) tabelmodel.getValueAt(i, 2));
        textHarga.setText( tabelmodel.getValueAt(i, 3)+"");
        text_kodebrng.setEditable(false);
        }
    }//GEN-LAST:event_tableBarangMouseClicked

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
   text_kodebrng.setText("");
        text_namabrang.setText("");
        textKategori.setText("");
        textHarga.setText("");
        textstok.setText("");
        text_kodebrng.setEditable(true);  
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        String kode_barang = text_kodebrng.getText();
        String nama_barang = text_namabrang.getText();
        String kategori = textKategori.getText();
        String harga = textHarga.getText();
        String stok = textstok.getText();
        
              if(kode_barang.equals("")){
              JOptionPane.showMessageDialog(this, "Kolom Kode masih kosong");
          }else if(nama_barang.equals("")){
              JOptionPane.showMessageDialog(this, "Kolom Nama masih kosong");
          }else if(kategori.equals("")){
              JOptionPane.showMessageDialog(this, "Kolom Kategori masih kosong");
          }else if(harga.equals("")){
              JOptionPane.showMessageDialog(this, "Kolom Harga masih kosong");
          }else{
              Long kode_barangLong=null;
              Long hargaLong=null;
              Long stokLong=null;
              try{
                  kode_barangLong = Long.parseLong(kode_barang);
                   hargaLong = Long.parseLong(harga);
                   stokLong = Long.parseLong(stok);
              }catch(Exception e){
                  JOptionPane.showMessageDialog(this, "Kode dan Harga harus berupa  Integer");
                  return;
              }
              
              try{
                  Connection connection = DataBarang.getConnection();
                  String query = "update barang set nama_barang=?,kategori=?,harga=?,stok=? where kode_barang=?";
                  PreparedStatement statement = (PreparedStatement) connection.prepareStatement(query);
                  statement.setString(1, nama_barang);
                  statement.setString(2,kategori);
                  statement.setLong(3,hargaLong);
                  statement.setLong(4,stokLong);
                   statement.setLong(5,kode_barangLong);
                  statement.executeUpdate();
                  JOptionPane.showMessageDialog(this, "Data berhasil diubah");
                  loadTabelBarang();
                  btn_resetActionPerformed(evt);
              }catch(Exception e){
                  JOptionPane.showMessageDialog(this, "Data gagal diubah");
                  System.out.println(e);
              }
          }
        
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void caribtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caribtnActionPerformed
loadTabelSearch();    
    }                                        

    private void entahlah(java.awt.event.ActionEvent evt) {                                         
        String kode_barang = text_kodebrng.getText();
            
            if(kode_barang.equals("")){
               JOptionPane.showMessageDialog(this, "pilih data yang akan dihapus");
                
            }else{
                Long kode_barangInt=null;
                try{
                    kode_barangInt=Long.parseLong(kode_barang);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Harap isi Kode barang dengan Integer");
                }
                
            try{
                    Connection connection = DataBarang.getConnection();
                    String query = "delete from barang where kode_barang=?";
                    PreparedStatement statement = (PreparedStatement) connection.prepareStatement(query);
                    statement.setLong(1,kode_barangInt);
                    statement.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Data Berhasil dihapus");
                    loadTabelBarang();
                    btn_resetActionPerformed(evt);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Data gagal dihapus");
                    System.out.println(e);
                }
            }
       
    }//GEN-LAST:event_caribtnActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed

     loadTabelFilter();
    }//GEN-LAST:event_btnFilterActionPerformed

    private void textfilterkategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfilterkategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfilterkategoriActionPerformed

    private void alldataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alldataActionPerformed
         loadTabelBarang();
    }//GEN-LAST:event_alldataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alldata;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JButton caribtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBarang;
    private javax.swing.JTextField textHarga;
    private javax.swing.JTextField textKategori;
    private javax.swing.JTextField text_kodebrng;
    private javax.swing.JTextField text_namabrang;
    private javax.swing.JTextField textfilterkategori;
    private javax.swing.JTextField textsearch;
    private javax.swing.JTextField textstok;
    // End of variables declaration//GEN-END:variables
}
